[
    {"id": "15", "title": "4. Django Advanced Concepts", "subject__id": 7, "description": "", "content": "<iframe src=\"https://drive.google.com/file/d/1Uh7--KCiYM4AZ1DQ-JewXGvVHY_TC1-l/preview\" width=\"100%\" height=\"480\" ></iframe>", "created_at": "2024-10-11 13:13:20"},
    {"id": "14", "title": "3. Django Basic", "subject__id": 7, "description": "", "content": "<iframe src=\"https://drive.google.com/file/d/1QvR9dklm7C_AumZl-quPR9rsTzdyYFAP/preview\" width=\"100%\" height=\"480\" ></iframe>", "created_at": "2024-10-11 13:11:43"},
    {"id": "13", "title": "2. Setting Up the Development Environment", "subject_id": 7, "description": "", "content": "<iframe src=\"https://drive.google.com/file/d/1dNJ9EXjwGKW5p9y4TSNU6aLNc146YF2N/preview\" width=\"640\" height=\"480\" allow=\"autoplay\"></iframe>", "created_at": "2024-10-11 13:10:10"},
    {"id": "12", "title": "1. Introduction", "subject__id": 7, "description": "", "content": "<p><iframe height=\"480\" src=\"https://drive.google.com/file/d/17DqWjblEECs1dPOWM01EH8iEnyaRq8jX/preview\" width=\"100%\"></iframe></p>", "created_at": "2024-10-11 13:08:36"},
    {"id": "11", "title": "Syllabus", "subject__id": 7, "description": "", "content": "<iframe src=\"https://drive.google.com/file/d/1QyZCwyJh8VrRYpTUn03hEjZVqrV2AmpK/preview\" width=\"100%\" height=\"480\" ></iframe>", "created_at": "2024-10-11 13:07:24"},
    {"id": "10", "title": "9. Pythonanywhere", "subject__id": 7, "description": "How to update your app?", "content": "<p><iframe height=\"500\" sandbox=\"\" src=\"https://drive.google.com/file/d/1CdQD-dDNOytooy3DuBrW2tKLezMh8T1R/preview\" width=\"100%\"></iframe></p>", "created_at": "2024-10-11 12:55:59"},
    {"id": "8", "title": "8 - Lambda expressions and Functional Interfaces", "subject__id": 1, "description": "In Java, a lambda expression is a concise way to represent a function or a block of code that can be passed around as if it were an object. It allows you to implement functional interfaces, which are interfaces that contain a single abstract method. Lambda expressions provide a clear and expressive syntax for writing instances of these interfaces, enabling more readable and maintainable code, particularly in functional programming paradigms. A functional interface can be annotated with @FunctionalInterface, which helps ensure that it adheres to the single abstract method requirement. Common use cases for lambda expressions and functional interfaces include event handling, callbacks, and operations on collections, such as filtering and mapping with streams.", "content": "<iframe src=\"https://drive.google.com/file/d/1FZTZ4SmRT1Gh77wnObbYJUV0XVEc5TSX/preview\" width=\"640\" height=\"480\" allow=\"autoplay\"></iframe>", "created_at": "2024-10-11 12:22:08"},
    {"id": "7", "title": "7 - Collections - ArrayList, Collection Sort", "subject__id": 1, "description": "Collections in Java are frameworks that provide a set of classes and interfaces to store and manipulate groups of objects. The `ArrayList` is a widely used implementation of the `List` interface, allowing dynamic resizing, easy element access, and manipulation. It stores elements in a sequential manner and provides methods for adding, removing, and retrieving items. The `Collections.sort()` method is a utility that allows sorting of elements in a list. It can sort objects based on their natural ordering or a specified comparator, making it easier to organize data efficiently.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/1Ut2mP_8tQb6lBd6ZBAy28VGOGAodoJNM/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:21:43"},
    {"id": "6", "title": "6 - String and Regex", "subject__id": 1, "description": "Strings in programming represent sequences of characters, often used for handling text. Common operations with strings include concatenation, slicing, and comparison. Regular Expressions (Regex) are patterns used to match or find specific sequences of characters within strings. Regex provides powerful tools for searching, replacing, or validating string data by using various symbols and constructs like `*`, `+`, `?`, and character classes to define search patterns.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/11jdzdezZ3BHk6zmGZ1OoOZwFMlJXRt22/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:21:33"},
    {"id": "5", "title": "5 - Advanced OOP in-Java", "subject__id": 1, "description": "Polymorphism allows objects of different subclasses to be treated as objects of a base class, enabling flexibility in code. An abstract class can contain both abstract methods (without a body) and implemented methods, whereas an interface is a collection of constants and method declarations. When a class implements an interface, it must provide implementations for all of the interface's methods.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/1r82bJg7nDYE3eTNjynEbeB6pYsKXxxYm/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:21:18"},
    {"id": "4", "title": "4 - Object-Oriented Programming", "subject__id": 1, "description": "OOP principles include encapsulation, inheritance, and polymorphism, providing a framework for organizing code into reusable components. Encapsulation hides the internal state of an object, exposing only necessary functionalities through methods. Inheritance allows classes to inherit attributes and methods from other classes, promoting code reuse. Polymorphism enables objects of different types to be treated as the same type through a common interface or superclass.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/1VtFWBMC9g0-WdOwb8VZwb6zvFrvbyPYY/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:21:03"},
    {"id": "3", "title": "3 - Programming Fundamentals", "subject__id": 1, "description": "Fundamentals of programming cover basic concepts such as variables, data types, control structures (like loops and conditionals), and functions or methods. Understanding these concepts is crucial for developing logical thinking and problem-solving skills in coding. Variables store data that can be manipulated, while data types define the nature of the data. Control structures allow for decision-making and repetition, which are essential in writing efficient and functional code.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/1RjZLk9PZmcypq2EcMw0Euq0oA1ck1d3K/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:20:40"},
    {"id": "2", "title": "2 - Introduction to Java", "subject__id": 1, "description": "Java is a widely-used programming language that is object-oriented and platform-independent due to its Write Once, Run Anywhere (WORA) capability. It utilizes the Java Virtual Machine (JVM) to run Java applications on any device that supports it. Key features of Java include its strong typing, garbage collection, and rich API. Understanding the core concepts of Java is essential for developing robust applications.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/1alDNW-OwC0l8ZhWqX2oDeyxlHNwPCsZ/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:20:26"},
    {"id": "1", "title": "1 - Introduction to Programming", "subject__id": 1, "description": "Programming is the process of creating a set of instructions that tell a computer how to perform a task. It involves writing code in a programming language, using algorithms to solve problems, and understanding data structures. Learning programming fundamentals is essential for building a solid foundation in computer science.", "content": "<p><iframe height=\"500\" src=\"https://drive.google.com/file/d/1sRlNQeeybE_0Yaq_O1PzI9vZSR8Jqz3f/preview\" width=\"100%\"></iframe></p>\r\n\r\n<p>Click here to download: \r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1L4ybieL2WNUnW-SIiEHV6ZvkTODqK7Xi?usp=sharing\" target=\"_blank\">Labs</a>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1FRzAJBmlVZ0OAxcATsiW650wZF1gkj6h?usp=sharing\" target=\"_blank\">Assignments</a></li>&nbsp;\r\n                    <a class=\"btn btn-primary mt-3\" href=\"https://drive.google.com/drive/folders/1iUQeU0dgHC7kCg_xIhoXPkpOHAwcbIAW?usp=drive_link\" target=\"_blank\">Ebooks</a>\r\n                </p>", "created_at": "2024-10-11 12:20:12"}
]
